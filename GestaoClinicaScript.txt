-- Alterado GIT Ubuntu
-- MySQL Script generated by MySQL Workbench
-- 05/29/16 13:53:19
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema alinecr_gestaoclinica
-- -----------------------------------------------------
-- Gestão de Clínicas Médicas
DROP SCHEMA IF EXISTS `alinecr_gestaoclinica` ;

-- -----------------------------------------------------
-- Schema alinecr_gestaoclinica
--
-- Gestão de Clínicas Médicas
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `alinecr_gestaoclinica` DEFAULT CHARACTER SET latin1 ;
USE `alinecr_gestaoclinica` ;

-- -----------------------------------------------------
-- Table `alinecr_gestaoclinica`.`OPERADORAS_OPR`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `alinecr_gestaoclinica`.`OPERADORAS_OPR` ;

CREATE TABLE IF NOT EXISTS `alinecr_gestaoclinica`.`OPERADORAS_OPR` (
  `OPR_ID` INT NOT NULL COMMENT 'ID da Operadora de Saúde',
  `OPR_NOME` VARCHAR(300) NOT NULL COMMENT 'Nome da Operadora de Saúde',
  `OPR_DATA_INICIO` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Data de início dos atendimentos',
  `OPR_DATA_FIM` DATETIME NULL COMMENT 'Data fim dos atendimentos para a Operadora',
  `OPR_MANUTENCAO` VARCHAR(100) NOT NULL COMMENT 'Usuário que efetuou a última manutenção cadastral da Operadora',
  PRIMARY KEY (`OPR_ID`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `idOPERADORAS_UNIQUE` ON `alinecr_gestaoclinica`.`OPERADORAS_OPR` (`OPR_ID` ASC);


-- -----------------------------------------------------
-- Table `alinecr_gestaoclinica`.`USUARIOS_USR`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `alinecr_gestaoclinica`.`USUARIOS_USR` ;

CREATE TABLE IF NOT EXISTS `alinecr_gestaoclinica`.`USUARIOS_USR` (
  `USR_LOGIN` VARCHAR(20) NOT NULL COMMENT 'Login do usuário no sistema de Gestão',
  `USR_EMAIL` VARCHAR(300) NOT NULL COMMENT 'Email do usuário do sistema',
  `USR_SENHA` VARCHAR(100) NOT NULL COMMENT 'Senha do usuário, criptografia MD5',
  `USR_DATA_INICIO` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Data início do cadastro do usuário',
  `USR_DATA_FIM` DATETIME NULL COMMENT 'Data de inativação do usuário no sistema',
  `USR_MANUTENCAO` VARCHAR(100) NOT NULL COMMENT 'Usuário que realizou a última manutenção no registro',
  PRIMARY KEY (`USR_LOGIN`));


-- -----------------------------------------------------
-- Table `alinecr_gestaoclinica`.`AGENDAS_AGD`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `alinecr_gestaoclinica`.`AGENDAS_AGD` ;

CREATE TABLE IF NOT EXISTS `alinecr_gestaoclinica`.`AGENDAS_AGD` (
  `AGENDA_ID` INT NOT NULL,
  `OPERADORA_ID` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`AGENDA_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `alinecr_gestaoclinica`.`BENEFICIARIOS_BNF`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `alinecr_gestaoclinica`.`BENEFICIARIOS_BNF` ;

CREATE TABLE IF NOT EXISTS `alinecr_gestaoclinica`.`BENEFICIARIOS_BNF` (
  `BENEFICIARIO_ID` INT NOT NULL,
  `OPERADORA_ID` VARCHAR(45) NOT NULL,
  `PESSOA_ID` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`BENEFICIARIO_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `alinecr_gestaoclinica`.`PESSOAS_PES`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `alinecr_gestaoclinica`.`PESSOAS_PES` ;

CREATE TABLE IF NOT EXISTS `alinecr_gestaoclinica`.`PESSOAS_PES` (
  `PES_ID` INT NOT NULL COMMENT 'ID sequencia do cadastro na clínica',
  `PES_NOME` VARCHAR(300) NOT NULL COMMENT 'Nome/Razão Social da Pessoa',
  `PES_TIPO` VARCHAR(1) NOT NULL COMMENT 'F - Física, J - Jurídica',
  `PES_TIPO_RELACAO_ID` INT NOT NULL COMMENT 'Chave da Tabela TIPO_RELACAO. Indica se é um Fornecedor, Cliente, Funcionário, entre outras.',
  `PES_DATA_INICIO` DATETIME NOT NULL COMMENT 'Data Início da relação comercial',
  `PES_DATA_FIM` DATETIME NULL COMMENT 'Data fim da relação comercial',
  `PES_MANUTENCAO` VARCHAR(100) NOT NULL COMMENT 'Usuário que efetuou a manutenção cadastral',
  PRIMARY KEY (`PES_ID`))
ENGINE = InnoDB;

CREATE INDEX `PES_IDX_1` ON `alinecr_gestaoclinica`.`PESSOAS_PES` (`PES_ID` ASC);


-- -----------------------------------------------------
-- Table `alinecr_gestaoclinica`.`TIPO_RELACAO_TPR`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `alinecr_gestaoclinica`.`TIPO_RELACAO_TPR` ;

CREATE TABLE IF NOT EXISTS `alinecr_gestaoclinica`.`TIPO_RELACAO_TPR` (
  `TPR_ID` INT NOT NULL COMMENT 'ID do Tipo de Relação que uma pessoa tem com a Clínica',
  `TPR_NOME` VARCHAR(300) NULL COMMENT 'Nome do Tipo de Relação que uma PESSOA tem com a Clínica',
  `TPR_DATA_INICIO` DATETIME NULL COMMENT 'Data de cadastro do registro',
  `TPR_DATA_FIM` DATETIME NULL COMMENT 'Data de inativação do registro',
  `TIPO_RELACAO_MANUTENCAO` VARCHAR(100) NULL COMMENT 'Usuário que efetuou a última manutenção',
  PRIMARY KEY (`TPR_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `alinecr_gestaoclinica`.`ESTADOS_ETD`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `alinecr_gestaoclinica`.`ESTADOS_ETD` ;

CREATE TABLE IF NOT EXISTS `alinecr_gestaoclinica`.`ESTADOS_ETD` (
  `ETD_ID` INT NOT NULL COMMENT 'Código do Estado no IBGE',
  `ETD_NOME` VARCHAR(100) NOT NULL COMMENT 'Nome da Unidade Federativa conforme IBGE',
  `ETD_MANUTENCAO` VARCHAR(100) NOT NULL COMMENT 'Usuário que efetuou a última manutenção cadastral',
  PRIMARY KEY (`ETD_ID`))
ENGINE = InnoDB
COMMENT = 'Tabela de Estados do IBGE';


-- -----------------------------------------------------
-- Table `alinecr_gestaoclinica`.`MUNICIPIOS_MNC`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `alinecr_gestaoclinica`.`MUNICIPIOS_MNC` ;

CREATE TABLE IF NOT EXISTS `alinecr_gestaoclinica`.`MUNICIPIOS_MNC` (
  `MNC_ID` INT NOT NULL COMMENT 'Codigo IBGE do Município',
  `ETD_ID` INT NOT NULL COMMENT 'Sigla da UF do Município segundo IBGE da tabela de estados',
  `MNC_NOME` VARCHAR(100) NOT NULL COMMENT 'Nome do Município da tabela IBGE',
  `MNC_POPULACAO` DOUBLE NULL COMMENT 'População do Município segundo IBGE na vigência do campo VIGENCIA_POPULACAO',
  `MNC_ANO_POPULACAO` INT NULL COMMENT 'Ano de publicação da tabela pelo IBGE',
  `MNC_MANUTENCAO` VARCHAR(100) NOT NULL COMMENT 'Usuário que efetuou a última manutenção cadastral',
  PRIMARY KEY (`MNC_ID`, `ETD_ID`),
  CONSTRAINT `MNC_FK1`
    FOREIGN KEY (`ETD_ID`)
    REFERENCES `alinecr_gestaoclinica`.`ESTADOS_ETD` (`ETD_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabela de Municípios do IBGE';

CREATE INDEX `MNC_IDX_1` ON `alinecr_gestaoclinica`.`MUNICIPIOS_MNC` (`MNC_ID` ASC);

CREATE INDEX `MNC_FK1_idx` ON `alinecr_gestaoclinica`.`MUNICIPIOS_MNC` (`ETD_ID` ASC);

CREATE UNIQUE INDEX `MNC_NOME_UNIQUE` ON `alinecr_gestaoclinica`.`MUNICIPIOS_MNC` (`MNC_NOME` ASC);


-- -----------------------------------------------------
-- Table `alinecr_gestaoclinica`.`ENDERECOS_END`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `alinecr_gestaoclinica`.`ENDERECOS_END` ;

CREATE TABLE IF NOT EXISTS `alinecr_gestaoclinica`.`ENDERECOS_END` (
  `PES_ID` INT NOT NULL COMMENT 'ID da Pessoa',
  `MNC_ID` INT NOT NULL COMMENT 'Código do Município do Endereço',
  `END_SEQUENCIA` INT NOT NULL COMMENT 'Sequencia do endereço da pessoa',
  `END_LOGRADOURO_ID` INT NOT NULL COMMENT 'ID do logradouro conforme tabela de CEPs dos correios',
  `END_NUMERO` INT NOT NULL COMMENT 'Número do endereço da pessoa',
  `END_COMPLEMENTO` VARCHAR(200) NULL COMMENT 'Complemento do endereço da pessoa',
  `END_CEP` VARCHAR(8) NOT NULL COMMENT 'CEP do logradouro conforme tabela dos correios',
  `END_DATA_INICIO` DATETIME NOT NULL COMMENT 'Data de cadastro do registro',
  `END_DATA_FIM` DATETIME NULL COMMENT 'Data de inativação do registro',
  `END_MANUTENCAO` VARCHAR(100) NOT NULL COMMENT 'Usuário que efetuou a última manutenção no sistema',
  PRIMARY KEY (`PES_ID`, `END_SEQUENCIA`, `MNC_ID`),
  CONSTRAINT `END_FK1`
    FOREIGN KEY (`PES_ID`)
    REFERENCES `alinecr_gestaoclinica`.`PESSOAS_PES` (`PES_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `END_FK2`
    FOREIGN KEY (`MNC_ID`)
    REFERENCES `alinecr_gestaoclinica`.`MUNICIPIOS_MNC` (`MNC_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabela de Endereços de Pessoas (Jurídica ou Física)';

CREATE INDEX `END_FK2_idx` ON `alinecr_gestaoclinica`.`ENDERECOS_END` (`MNC_ID` ASC);


-- -----------------------------------------------------
-- Table `alinecr_gestaoclinica`.`PESSOAS_TIPO_RELACAO_PTR`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `alinecr_gestaoclinica`.`PESSOAS_TIPO_RELACAO_PTR` ;

CREATE TABLE IF NOT EXISTS `alinecr_gestaoclinica`.`PESSOAS_TIPO_RELACAO_PTR` (
  `PES_ID` INT NOT NULL COMMENT 'ID da tabela PESSOA',
  `TPR_ID` INT NOT NULL COMMENT 'ID da tabela TIPO_RELACAO',
  `TPR_DATA_INICIO` DATETIME NOT NULL COMMENT 'Data do Cadastro do registro',
  `TPR_DATA_FIM` DATETIME NULL COMMENT 'Data de inativação do registro',
  `TPR_MANUTENCAO` VARCHAR(100) NOT NULL COMMENT 'Usuário que realizou a última manutenção no cadastro',
  PRIMARY KEY (`PES_ID`, `TPR_ID`),
  CONSTRAINT `TPR_FK1`
    FOREIGN KEY (`PES_ID`)
    REFERENCES `alinecr_gestaoclinica`.`PESSOAS_PES` (`PES_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `TPR_FK2`
    FOREIGN KEY (`TPR_ID`)
    REFERENCES `alinecr_gestaoclinica`.`TIPO_RELACAO_TPR` (`TPR_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `TPR_FK2_idx` ON `alinecr_gestaoclinica`.`PESSOAS_TIPO_RELACAO_PTR` (`TPR_ID` ASC);


-- -----------------------------------------------------
-- Table `alinecr_gestaoclinica`.`MENU_MNU`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `alinecr_gestaoclinica`.`MENU_MNU` ;

CREATE TABLE IF NOT EXISTS `alinecr_gestaoclinica`.`MENU_MNU` (
  `MNU_ID` INT NOT NULL,
  `MNU_NOME` VARCHAR(100) NULL,
  `MNU_PERMISSAO` VARCHAR(1) NULL,
  PRIMARY KEY (`MNU_ID`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
